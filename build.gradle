plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

group = 'com.example'
version = '1.0.0'

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            
            pom {
                name = 'My Project'
                description = 'My project description'
                url = 'https://github.com/mahabaleshwars/Java-PR-Test'
                
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                
                developers {
                    developer {
                        id = 'username'
                        name = 'Your Name'
                        email = 'your.email@example.com'
                    }
                }
                
                scm {
                    connection = 'scm:git:git://github.com/mahabaleshwars/Java-PR-Test.git'
                    developerConnection = 'scm:git:ssh://github.com:mahabaleshwars/Java-PR-Test.git'
                    url = 'https://github.com/mahabaleshwars/Java-PR-Test'
                }
            }
        }
    }
    
    repositories {
        maven {
            name = "OSSRH"
            url = version.endsWith('SNAPSHOT') 
                  ? "https://s01.oss.sonatype.org/content/repositories/snapshots/"
                  : "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username = System.getenv("MAVEN_USERNAME")
                password = System.getenv("MAVEN_PASSWORD")
            }
        }
    }
}

signing {
    def signingKey = findProperty("signingKey") ?: System.getenv("GPG_PRIVATE_KEY")
    def signingPassword = findProperty("signingPassword") ?: System.getenv("GPG_PASSPHRASE")
    
    useInMemoryPgpKeys(signingKey, signingPassword)
    sign publishing.publications.mavenJava
}