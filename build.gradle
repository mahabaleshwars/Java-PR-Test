plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'  // Added signing plugin for artifacts
}

group = 'com.example'
version = '1.0.0-SNAPSHOT'
sourceCompatibility = '11'
targetCompatibility = '11'

repositories {
    mavenCentral()
}

dependencies {
    // Added dependencies to match pom.xml
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    testImplementation 'junit:junit:4.13.2'
}

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/${System.getenv('GITHUB_REPOSITORY')}")
            credentials {
                username = System.getenv("USERNAME")
                password = System.getenv("PASSWORD")
            }
        }
        
        maven {
            name = "MavenCentral"
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username = System.getenv("MAVEN_USERNAME")
                password = System.getenv("MAVEN_CENTRAL_TOKEN")
            }
        }
    }
    
    publications {
        mavenJava(MavenPublication) {
            from(components.java)
            
            pom {
                name = 'Publishing Demo'
                description = 'Demo project for GitHub Actions Java publishing'
                url = 'https://github.com/example/publishing-demo'
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'http://www.opensource.org/licenses/mit-license.php'
                    }
                }
                developers {
                    developer {
                        id = 'mahabaleshwars'
                        name = 'Developer Name'
                        email = 'developer@example.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/example/publishing-demo.git'
                    developerConnection = 'scm:git:ssh://github.com:example/publishing-demo.git'
                    url = 'https://github.com/example/publishing-demo/tree/main'
                }
            }
        }
    }
}

signing {
    required { !version.endsWith("SNAPSHOT") && gradle.taskGraph.hasTask("publish") }
    sign publishing.publications.mavenJava
}

tasks.withType(Javadoc) {
    options.addStringOption('Xdoclint:none', '-quiet')
}

task helloPublishing {
    doLast {
        println "Hello Gradle Publishing!"
        println "Current Date and Time (UTC - YYYY-MM-DD HH:MM:SS formatted): 2025-07-18 15:57:51"
        println "Current User's Login: mahabaleshwars"
    }
}
