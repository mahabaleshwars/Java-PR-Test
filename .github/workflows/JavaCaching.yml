name: Java Build Tool Caching

on:
  workflow_dispatch:
  pull_request:
    branches: [main]

jobs:
  gradle-cache-test:
    name: Gradle - ${{ matrix.distribution }} JDK ${{ matrix.java-version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        distribution: [temurin, zulu]
        java-version: [11, 17]
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Java with Gradle cache
        id: setup-java
        uses: actions/setup-java@v4
        with:
          distribution: ${{ matrix.distribution }}
          java-version: ${{ matrix.java-version }}
          cache: 'gradle'

      - name: Setup Gradle project
        run: |
          # Create minimal Gradle project
          mkdir -p src/main/java
          
          # Create build.gradle
          cat > build.gradle << 'EOF'
          plugins {
              id 'java'
          }
          
          repositories {
              mavenCentral()
          }
          
          dependencies {
              implementation 'org.apache.commons:commons-lang3:3.12.0'
          }
          EOF
          
          # Create source file
          cat > src/main/java/HelloWorld.java << 'EOF'
          public class HelloWorld {
              public static void main(String[] args) {
                  System.out.println("Hello from Gradle!");
              }
          }
          EOF
          
          # Use gradle wrapper generation
          gradle wrapper
        
      - name: Build with Gradle
        run: ./gradlew build
        
      - name: Cache status
        run: |
          echo "Cache Hit: ${{ steps.setup-java.outputs.cache-hit || 'false' }}"
          echo "Current Date and Time (UTC): 2025-07-17 15:05:05"
          echo "Current User's Login: mahabaleshwars"

  maven-cache-test:
    name: Maven - ${{ matrix.distribution }} JDK ${{ matrix.java-version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        distribution: [temurin, zulu]
        java-version: [11, 17]
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Java with Maven cache
        id: setup-java
        uses: actions/setup-java@v4
        with:
          distribution: ${{ matrix.distribution }}
          java-version: ${{ matrix.java-version }}
          cache: 'maven'
          
      - name: Setup Maven project
        run: |
          # Create minimal Maven project structure
          mkdir -p src/main/java
          
          # Create pom.xml
          cat > pom.xml << 'EOF'
          <project xmlns="http://maven.apache.org/POM/4.0.0" 
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 
                                       http://maven.apache.org/xsd/maven-4.0.0.xsd">
              <modelVersion>4.0.0</modelVersion>
              <groupId>com.example</groupId>
              <artifactId>maven-cache-demo</artifactId>
              <version>1.0.0</version>
              
              <properties>
                  <maven.compiler.source>11</maven.compiler.source>
                  <maven.compiler.target>11</maven.compiler.target>
              </properties>
              
              <dependencies>
                  <dependency>
                      <groupId>org.apache.commons</groupId>
                      <artifactId>commons-lang3</artifactId>
                      <version>3.12.0</version>
                  </dependency>
              </dependencies>
          </project>
          EOF
          
          # Create source file
          cat > src/main/java/HelloWorld.java << 'EOF'
          public class HelloWorld {
              public static void main(String[] args) {
                  System.out.println("Hello from Maven!");
              }
          }
          EOF
          
      - name: Build with Maven
        run: mvn -B package
        
      - name: Cache status
        run: |
          echo "Cache Hit: ${{ steps.setup-java.outputs.cache-hit || 'false' }}"
          echo "Current Date and Time (UTC): 2025-07-17 15:05:05"
          echo "Current User's Login: mahabaleshwars"

  sbt-cache-test:
    name: SBT - ${{ matrix.distribution }} JDK ${{ matrix.java-version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        distribution: [temurin]
        java-version: [11]
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Java with SBT cache
        id: setup-java
        uses: actions/setup-java@v4
        with:
          distribution: ${{ matrix.distribution }}
          java-version: ${{ matrix.java-version }}
          cache: 'sbt'
          
      - name: Install SBT
        run: |
          echo "deb https://repo.scala-sbt.org/scalasbt/debian all main" | sudo tee /etc/apt/sources.list.d/sbt.list
          echo "deb https://repo.scala-sbt.org/scalasbt/debian /" | sudo tee /etc/apt/sources.list.d/sbt_old.list
          curl -sL "https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x2EE0EA64E40A89B84B2DF73499E82A75642AC823" | sudo apt-key add
          sudo apt-get update
          sudo apt-get install sbt
          
      - name: Setup SBT project
        run: |
          # Create minimal SBT project structure
          mkdir -p src/main/scala project
          
          # Create build.sbt
          cat > build.sbt << 'EOF'
          name := "sbt-cache-demo"
          version := "1.0.0"
          scalaVersion := "2.13.8"
          
          libraryDependencies += "org.apache.commons" % "commons-lang3" % "3.12.0"
          EOF
          
          # Create build.properties
          mkdir -p project
          cat > project/build.properties << 'EOF'
          sbt.version=1.7.1
          EOF
          
          # Create source file
          cat > src/main/scala/HelloWorld.scala << 'EOF'
          object HelloWorld {
            def main(args: Array[String]): Unit = {
              println("Hello from SBT!")
            }
          }
          EOF
          
      - name: Build with SBT
        run: sbt compile
        
      - name: Cache status
        run: |
          echo "Cache Hit: ${{ steps.setup-java.outputs.cache-hit || 'false' }}"
          echo "Current Date and Time (UTC): 2025-07-17 15:05:05"
          echo "Current User's Login: mahabaleshwars"

  custom-path-tests:
    name: Custom Path - ${{ matrix.build-tool }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        build-tool: [gradle, maven]
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Java with custom cache path
        id: setup-java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: ${{ matrix.build-tool }}
          cache-dependency-path: ${{ matrix.build-tool == 'gradle' && 'sub-project/build.gradle' || 'sub-project/pom.xml' }}
          
      - name: Create sub-project files
        run: |
          # Create project directory
          mkdir -p sub-project/src/main/java
          
          if [ "${{ matrix.build-tool }}" = "gradle" ]; then
            # Create gradle build file
            cat > sub-project/build.gradle << 'EOF'
            plugins {
                id 'java'
            }
            
            repositories {
                mavenCentral()
            }
            
            dependencies {
                implementation 'org.apache.commons:commons-lang3:3.12.0'
            }
            EOF
            
            # Create wrapper in subproject
            cd sub-project
            gradle wrapper
            cd ..
            
          elif [ "${{ matrix.build-tool }}" = "maven" ]; then
            # Create Maven POM
            cat > sub-project/pom.xml << 'EOF'
            <project xmlns="http://maven.apache.org/POM/4.0.0"
                     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                     xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 
                                         http://maven.apache.org/xsd/maven-4.0.0.xsd">
                <modelVersion>4.0.0</modelVersion>
                <groupId>com.example</groupId>
                <artifactId>sub-project</artifactId>
                <version>1.0.0</version>
                
                <properties>
                    <maven.compiler.source>11</maven.compiler.source>
                    <maven.compiler.target>11</maven.compiler.target>
                </properties>
                
                <dependencies>
                    <dependency>
                        <groupId>org.apache.commons</groupId>
                        <artifactId>commons-lang3</artifactId>
                        <version>3.12.0</version>
                    </dependency>
                </dependencies>
            </project>
            EOF
          fi
          
          # Create source file
          cat > sub-project/src/main/java/HelloWorld.java << 'EOF'
          public class HelloWorld {
              public static void main(String[] args) {
                  System.out.println("Hello from Custom Path!");
              }
          }
          EOF
        
      - name: Build with ${{ matrix.build-tool }}
        run: |
          cd sub-project
          if [ "${{ matrix.build-tool }}" = "gradle" ]; then
            ./gradlew build
          else
            mvn -B package
          fi
        
      - name: Cache status
        run: |
          echo "Cache Hit: ${{ steps.setup-java.outputs.cache-hit || 'false' }}"
          echo "Current Date and Time (UTC): 2025-07-17 15:05:05"
          echo "Current User's Login: mahabaleshwars"
