name: Java Caching with All Distributions

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  gradle-cache-test:
    name: Gradle Cache - ${{ matrix.distribution }} JDK ${{ matrix.java-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        distribution: [temurin, zulu, liberica, corretto, microsoft, semeru, oracle, sapmachine]
        java-version: [17, 21]
        exclude:
          # Oracle only supports JDK 17+
          - distribution: oracle
            java-version: 11
          # Add exclusions for combinations that don't work well
          - distribution: dragonwell
            os: macos-latest
        include:
          # Add specialized distributions on specific OSes
          - os: ubuntu-latest
            distribution: dragonwell
            java-version: 17
          - os: ubuntu-latest
            distribution: graalvm
            java-version: 21
          - os: ubuntu-latest
            distribution: jetbrains
            java-version: 21
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Java with Gradle cache
        id: setup-java
        uses: priya-kinthali/setup-java@enhance-error-logging-retry
        with:
          distribution: ${{ matrix.distribution }}
          java-version: ${{ matrix.java-version }}
          cache: 'gradle'
          
      - name: Create basic Gradle project
        run: |
          mkdir -p src/main/java
          echo 'plugins { id "java" }; repositories { mavenCentral() }; dependencies { implementation "org.apache.commons:commons-lang3:3.12.0" }' > build.gradle
          echo 'public class HelloWorld { public static void main(String[] args) { System.out.println("Hello from Gradle!"); } }' > src/main/java/HelloWorld.java
          # Create wrapper files for windows
          if [ "${{ runner.os }}" = "Windows" ]; then
            echo './gradlew.bat build --info'
          else
            echo './gradlew build --info'
            chmod +x ./gradlew
          fi
        shell: bash

      - name: Build with Gradle
        run: |
          if [ "${{ runner.os }}" = "Windows" ]; then
            ./gradlew.bat build --info
          else
            ./gradlew build --info
          fi
        shell: bash
        continue-on-error: true
        
      - name: Cache status
        run: |
          echo "Cache Hit: ${{ steps.setup-java.outputs.cache-hit || 'false' }}"
          echo "Current Date and Time (UTC): 2025-07-17 14:08:04"
          echo "Current User's Login: mahabaleshwar"
        shell: bash

  maven-cache-test:
    name: Maven Cache - ${{ matrix.distribution }} JDK ${{ matrix.java-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        distribution: [temurin, zulu, liberica, corretto, microsoft, semeru, oracle, sapmachine]
        java-version: [11, 17, 21]
        exclude:
          # Oracle only supports JDK 17+
          - distribution: oracle
            java-version: 11
          # Add exclusions for combinations that don't work well
          - distribution: dragonwell
            os: macos-latest
        include:
          # Add specialized distributions on specific OSes
          - os: ubuntu-latest
            distribution: dragonwell
            java-version: 17
          - os: ubuntu-latest
            distribution: graalvm
            java-version: 21
          - os: ubuntu-latest
            distribution: jetbrains
            java-version: 21
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Java with Maven cache
        id: setup-java
        uses: priya-kinthali/setup-java@enhance-error-logging-retry
        with:
          distribution: ${{ matrix.distribution }}
          java-version: ${{ matrix.java-version }}
          cache: 'maven'
          
      - name: Create basic Maven project
        run: |
          mkdir -p src/main/java
          cat > pom.xml << EOF
          <project>
            <modelVersion>4.0.0</modelVersion>
            <groupId>com.example</groupId>
            <artifactId>simple-maven</artifactId>
            <version>1.0.0</version>
            <dependencies>
              <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>3.12.0</version>
              </dependency>
            </dependencies>
            <properties>
              <maven.compiler.source>${{ matrix.java-version }}</maven.compiler.source>
              <maven.compiler.target>${{ matrix.java-version }}</maven.compiler.target>
            </properties>
          </project>
          EOF
          echo 'public class HelloWorld { public static void main(String[] args) { System.out.println("Hello from Maven!"); } }' > src/main/java/HelloWorld.java
        shell: bash

      - name: Build with Maven
        run: mvn -B package
        continue-on-error: true
        
      - name: Cache status
        run: |
          echo "Cache Hit: ${{ steps.setup-java.outputs.cache-hit || 'false' }}"
          echo "Current Date and Time (UTC): 2025-07-17 14:08:04"
          echo "Current User's Login: mahabaleshwar"
        shell: bash

  sbt-cache-test:
    name: SBT Cache - ${{ matrix.distribution }} JDK ${{ matrix.java-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        distribution: [temurin, zulu, liberica, corretto]
        java-version: [11, 17, 21]
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Java with SBT cache
        id: setup-java
        uses: priya-kinthali/setup-java@enhance-error-logging-retry
        with:
          distribution: ${{ matrix.distribution }}
          java-version: ${{ matrix.java-version }}
          cache: 'sbt'
          
      - name: Create basic SBT project
        run: |
          mkdir -p project src/main/scala
          echo 'name := "hello-world"' > build.sbt
          echo 'version := "0.1"' >> build.sbt
          echo 'scalaVersion := "2.13.8"' >> build.sbt
          echo 'sbt.version=1.8.0' > project/build.properties
          echo 'object HelloWorld { def main(args: Array[String]): Unit = println("Hello from SBT!") }' > src/main/scala/HelloWorld.scala
        shell: bash

      - name: Build with SBT
        run: sbt compile
        continue-on-error: true
        env:
          SEGMENT_DOWNLOAD_TIMEOUT_MINS: '3'
        
      - name: Cache status
        run: |
          echo "Cache Hit: ${{ steps.setup-java.outputs.cache-hit || 'false' }}"
          echo "Current User's Login: mahabaleshwar"
        shell: bash
